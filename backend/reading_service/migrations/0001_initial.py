# Generated by Django 4.2.7 on 2025-07-24 21:50

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ReadingSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "book_uuid",
                    models.UUIDField(help_text="UUID du livre dans catalog_service"),
                ),
                (
                    "book_title",
                    models.CharField(
                        help_text="Titre du livre (cache pour performance)",
                        max_length=500,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("paused", "En pause"),
                            ("completed", "Terminée"),
                            ("abandoned", "Abandonnée"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "device_type",
                    models.CharField(
                        choices=[
                            ("web", "Navigateur Web"),
                            ("mobile", "Application Mobile"),
                            ("tablet", "Tablette"),
                            ("ereader", "Liseuse"),
                            ("desktop", "Application Desktop"),
                        ],
                        default="web",
                        max_length=20,
                    ),
                ),
                ("device_info", models.JSONField(blank=True, default=dict)),
                ("current_page", models.PositiveIntegerField(default=1)),
                (
                    "current_position",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                    ),
                ),
                ("total_pages_read", models.PositiveIntegerField(default=0)),
                ("start_time", models.DateTimeField(auto_now_add=True)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                (
                    "total_reading_time",
                    models.DurationField(default=datetime.timedelta),
                ),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "font_size",
                    models.PositiveIntegerField(
                        default=16,
                        validators=[
                            django.core.validators.MinValueValidator(8),
                            django.core.validators.MaxValueValidator(72),
                        ],
                    ),
                ),
                ("font_family", models.CharField(default="Arial", max_length=50)),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Clair"),
                            ("dark", "Sombre"),
                            ("sepia", "Sépia"),
                        ],
                        default="light",
                        max_length=20,
                    ),
                ),
                (
                    "line_height",
                    models.FloatField(
                        default=1.5,
                        validators=[
                            django.core.validators.MinValueValidator(1.0),
                            django.core.validators.MaxValueValidator(3.0),
                        ],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reading_sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "reading_sessions",
                "ordering": ["-last_activity"],
            },
        ),
        migrations.CreateModel(
            name="ReadingProgress",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("page_number", models.PositiveIntegerField()),
                (
                    "position_in_page",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("chapter_title", models.CharField(blank=True, max_length=200)),
                ("time_spent", models.DurationField(default=datetime.timedelta)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="progress_entries",
                        to="reading_service.readingsession",
                    ),
                ),
            ],
            options={
                "db_table": "reading_progress",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ReadingGoal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "goal_type",
                    models.CharField(
                        choices=[
                            ("books_per_year", "Livres par an"),
                            ("books_per_month", "Livres par mois"),
                            ("pages_per_day", "Pages par jour"),
                            ("minutes_per_day", "Minutes par jour"),
                            ("books_in_category", "Livres dans une catégorie"),
                        ],
                        max_length=30,
                    ),
                ),
                ("target_value", models.PositiveIntegerField()),
                ("current_value", models.PositiveIntegerField(default=0)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "category_uuid",
                    models.UUIDField(
                        blank=True,
                        help_text="UUID de la catégorie dans catalog_service",
                        null=True,
                    ),
                ),
                (
                    "author_uuid",
                    models.UUIDField(
                        blank=True,
                        help_text="UUID de l'auteur dans catalog_service",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("completed", "Terminé"),
                            ("paused", "En pause"),
                            ("failed", "Échoué"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("send_reminders", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reading_goals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "reading_goals",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Bookmark",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "book_uuid",
                    models.UUIDField(help_text="UUID du livre dans catalog_service"),
                ),
                (
                    "book_title",
                    models.CharField(
                        help_text="Titre du livre (cache pour performance)",
                        max_length=500,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("bookmark", "Signet"),
                            ("highlight", "Surlignage"),
                            ("note", "Note"),
                        ],
                        default="bookmark",
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=200)),
                ("content", models.TextField(blank=True)),
                ("note", models.TextField(blank=True)),
                ("page_number", models.PositiveIntegerField()),
                (
                    "position_in_page",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                ("chapter_title", models.CharField(blank=True, max_length=200)),
                ("highlight_color", models.CharField(default="#ffff00", max_length=7)),
                ("start_offset", models.PositiveIntegerField(blank=True, null=True)),
                ("end_offset", models.PositiveIntegerField(blank=True, null=True)),
                ("is_private", models.BooleanField(default=True)),
                ("is_favorite", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookmarks",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "bookmarks",
                "ordering": ["page_number", "position_in_page"],
            },
        ),
        migrations.CreateModel(
            name="ReadingStatistics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "period_type",
                    models.CharField(
                        choices=[
                            ("daily", "Quotidien"),
                            ("weekly", "Hebdomadaire"),
                            ("monthly", "Mensuel"),
                            ("yearly", "Annuel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("period_start", models.DateField()),
                ("period_end", models.DateField()),
                ("books_started", models.PositiveIntegerField(default=0)),
                ("books_completed", models.PositiveIntegerField(default=0)),
                ("pages_read", models.PositiveIntegerField(default=0)),
                (
                    "total_reading_time",
                    models.DurationField(default=datetime.timedelta),
                ),
                (
                    "average_session_duration",
                    models.DurationField(default=datetime.timedelta),
                ),
                (
                    "longest_session_duration",
                    models.DurationField(default=datetime.timedelta),
                ),
                ("reading_sessions_count", models.PositiveIntegerField(default=0)),
                (
                    "most_read_category_uuid",
                    models.UUIDField(
                        blank=True,
                        help_text="UUID de la catégorie la plus lue",
                        null=True,
                    ),
                ),
                ("favorite_reading_time", models.TimeField(blank=True, null=True)),
                ("preferred_device", models.CharField(blank=True, max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reading_statistics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "reading_statistics",
                "ordering": ["-period_start"],
                "indexes": [
                    models.Index(
                        fields=["user", "period_type"],
                        name="reading_sta_user_id_1b2023_idx",
                    ),
                    models.Index(
                        fields=["period_start", "period_end"],
                        name="reading_sta_period__b3a1f0_idx",
                    ),
                ],
                "unique_together": {("user", "period_type", "period_start")},
            },
        ),
        migrations.AddIndex(
            model_name="readingsession",
            index=models.Index(
                fields=["user", "book_uuid"], name="reading_ses_user_id_cc978f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="readingsession",
            index=models.Index(fields=["status"], name="reading_ses_status_e2d69c_idx"),
        ),
        migrations.AddIndex(
            model_name="readingsession",
            index=models.Index(
                fields=["last_activity"], name="reading_ses_last_ac_8979a2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="readingprogress",
            index=models.Index(
                fields=["session", "page_number"], name="reading_pro_session_41c80e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="readingprogress",
            index=models.Index(
                fields=["timestamp"], name="reading_pro_timesta_fab95c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="readinggoal",
            index=models.Index(
                fields=["user", "status"], name="reading_goa_user_id_6ff33f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="readinggoal",
            index=models.Index(
                fields=["start_date", "end_date"], name="reading_goa_start_d_02e983_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="readinggoal",
            index=models.Index(
                fields=["goal_type"], name="reading_goa_goal_ty_a5dd42_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["user", "book_uuid"], name="bookmarks_user_id_77a4b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(fields=["type"], name="bookmarks_type_95c0f4_idx"),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["page_number"], name="bookmarks_page_nu_965894_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=models.Index(
                fields=["is_favorite"], name="bookmarks_is_favo_ed80da_idx"
            ),
        ),
    ]
