# Generated by Django 4.2.7 on 2025-07-24 23:15

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("shared_models", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50, unique=True)),
                (
                    "invoice_type",
                    models.CharField(
                        choices=[
                            ("subscription", "Abonnement"),
                            ("book_purchase", "Achat de livre"),
                            ("premium_upgrade", "Mise à niveau premium"),
                            ("author_royalty", "Royalties auteur"),
                            ("refund", "Remboursement"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("pending", "En attente"),
                            ("sent", "Envoyée"),
                            ("paid", "Payée"),
                            ("overdue", "En retard"),
                            ("cancelled", "Annulée"),
                            ("refunded", "Remboursée"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        choices=[
                            ("XOF", "Franc CFA (XOF)"),
                            ("NGN", "Naira nigérian"),
                            ("GHS", "Cedi ghanéen"),
                            ("EUR", "Euro"),
                            ("USD", "Dollar américain"),
                        ],
                        default="XOF",
                        max_length=3,
                    ),
                ),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=4, default=Decimal("0.00"), max_digits=5
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=12
                    ),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("billing_name", models.CharField(max_length=255)),
                ("billing_email", models.EmailField(max_length=254)),
                ("billing_address", models.TextField(blank=True)),
                ("billing_country", models.CharField(blank=True, max_length=10)),
                ("billing_phone", models.CharField(blank=True, max_length=20)),
                ("issue_date", models.DateTimeField(default=django.utils.timezone.now)),
                ("due_date", models.DateTimeField()),
                ("paid_date", models.DateTimeField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "billing_invoices",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(editable=False, primary_key=True, serialize=False),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("currency", models.CharField(default="XOF", max_length=3)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("subscription", "Abonnement"),
                            ("book_purchase", "Achat de livre"),
                            ("premium_upgrade", "Mise à niveau premium"),
                            ("refund", "Remboursement"),
                            ("tip", "Pourboire auteur"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("processing", "En cours"),
                            ("completed", "Terminée"),
                            ("failed", "Échouée"),
                            ("cancelled", "Annulée"),
                            ("refunded", "Remboursée"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "payment_provider",
                    models.CharField(
                        choices=[
                            ("orange_money", "Orange Money"),
                            ("mtn_momo", "MTN Mobile Money"),
                            ("wave", "Wave"),
                            ("stripe", "Stripe"),
                            ("paypal", "PayPal"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "provider_transaction_id",
                    models.CharField(blank=True, max_length=255),
                ),
                ("provider_reference", models.CharField(blank=True, max_length=255)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("country_code", models.CharField(blank=True, max_length=5)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "fees",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0.00"), max_digits=8
                    ),
                ),
                ("net_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "payment_transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InvoiceItem",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("description", models.CharField(max_length=500)),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("1.00"), max_digits=10
                    ),
                ),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=12)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("book_uuid", models.UUIDField(blank=True, null=True)),
                ("book_title", models.CharField(blank=True, max_length=500)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="shared_models.invoice",
                    ),
                ),
            ],
            options={
                "db_table": "billing_invoice_items",
                "ordering": ["created_at"],
            },
        ),
        migrations.AddField(
            model_name="invoice",
            name="payment_transaction",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="invoice",
                to="shared_models.paymenttransaction",
            ),
        ),
        migrations.AddField(
            model_name="invoice",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="invoices",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="BillingConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "config_type",
                    models.CharField(
                        choices=[
                            ("tax_rate", "Taux de TVA"),
                            ("royalty_rate", "Taux de royalty"),
                            ("payment_terms", "Conditions de paiement"),
                            ("invoice_template", "Template de facture"),
                            ("auto_billing", "Facturation automatique"),
                        ],
                        max_length=50,
                    ),
                ),
                ("config_key", models.CharField(max_length=100)),
                ("config_value", models.JSONField()),
                ("country_code", models.CharField(blank=True, max_length=10)),
                ("user_type", models.CharField(blank=True, max_length=50)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "billing_configurations",
                "ordering": ["config_type", "config_key"],
            },
        ),
        migrations.CreateModel(
            name="AuthorRoyalty",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("book_uuid", models.UUIDField(blank=True, null=True)),
                ("book_title", models.CharField(blank=True, max_length=500)),
                (
                    "royalty_type",
                    models.CharField(
                        choices=[
                            ("book_sale", "Vente de livre"),
                            ("subscription_share", "Part d'abonnement"),
                            ("tip", "Pourboire"),
                            ("bonus", "Bonus"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("calculated", "Calculée"),
                            ("invoiced", "Facturée"),
                            ("paid", "Payée"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("base_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "royalty_rate",
                    models.DecimalField(
                        decimal_places=4,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    "royalty_amount",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("currency", models.CharField(default="XOF", max_length=3)),
                ("period_start", models.DateTimeField()),
                ("period_end", models.DateTimeField()),
                ("calculation_details", models.JSONField(blank=True, default=dict)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("calculated_at", models.DateTimeField(blank=True, null=True)),
                ("paid_at", models.DateTimeField(blank=True, null=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="royalties",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="shared_models.invoice",
                    ),
                ),
            ],
            options={
                "db_table": "billing_author_royalties",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RecurringBilling",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("subscription_type", models.CharField(max_length=50)),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("monthly", "Mensuel"),
                            ("quarterly", "Trimestriel"),
                            ("yearly", "Annuel"),
                        ],
                        max_length=20,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("currency", models.CharField(default="XOF", max_length=3)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Actif"),
                            ("paused", "En pause"),
                            ("cancelled", "Annulé"),
                            ("expired", "Expiré"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("start_date", models.DateTimeField()),
                ("end_date", models.DateTimeField(blank=True, null=True)),
                ("next_billing_date", models.DateTimeField()),
                ("last_billing_date", models.DateTimeField(blank=True, null=True)),
                ("total_cycles", models.IntegerField(blank=True, null=True)),
                ("completed_cycles", models.IntegerField(default=0)),
                ("failed_attempts", models.IntegerField(default=0)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recurring_billings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "billing_recurring",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "status"], name="billing_rec_user_id_fffcbc_idx"
                    ),
                    models.Index(
                        fields=["next_billing_date", "status"],
                        name="billing_rec_next_bi_abce83_idx",
                    ),
                    models.Index(
                        fields=["subscription_type", "status"],
                        name="billing_rec_subscri_b38729_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["user", "status"], name="payment_tra_user_id_131e27_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["payment_provider", "created_at"],
                name="payment_tra_payment_bb9980_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="paymenttransaction",
            index=models.Index(
                fields=["country_code", "created_at"],
                name="payment_tra_country_9ce880_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["user", "status"], name="billing_inv_user_id_3f3549_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["invoice_type", "status"], name="billing_inv_invoice_7a6fc1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["due_date", "status"], name="billing_inv_due_dat_b43196_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="invoice",
            index=models.Index(
                fields=["invoice_number"], name="billing_inv_invoice_1d4853_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="billingconfiguration",
            unique_together={
                ("config_type", "config_key", "country_code", "user_type")
            },
        ),
        migrations.AddIndex(
            model_name="authorroyalty",
            index=models.Index(
                fields=["author", "status"], name="billing_aut_author__5521f0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="authorroyalty",
            index=models.Index(
                fields=["book_uuid", "period_start"],
                name="billing_aut_book_uu_bd5707_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="authorroyalty",
            index=models.Index(
                fields=["status", "period_end"], name="billing_aut_status_6166ad_idx"
            ),
        ),
    ]
